package pack1;

public class Test3 {

	public static void main(String[] args) {
		// 관계, 논리, 기타 연산자
		int a = 5;
		System.out.println(a > 3); // println에서 결과 값을 나타 낼 수 있음. printf는 불가능
		System.out.println(a <= 3);
		System.out.println(a == 3);
		System.out.println(a != 3);
		
		System.out.println();
		int b = 10;
		System.out.println(a > 3 && b <=10); // 논리곱(AND). 첫번째와 두번째 조건을 만족해야지 참, 하나라도 거짓이면 거짓으로 출력.
		System.out.println(a >= 3 && b ==10); // 위에와 같은 의미
		
		System.out.println(b > 6 || b < 10); // 논리합(OR) 둘 중에 하나라도 참이 참. 둘 다 거짓일 때만 거짓.
		System.out.println(b <= 6 || b == 3+7); // 위에와 같은 의미. 우선순위 (소괄호) > 산술 > 관계 > 논리 > =(치환)
		
		System.out.println();
		//int ii = 8, ij;
		//System.out.println(ii + " " + ij); // ij에 초기값 설정을 하지 않았기 때문에 추력 될 수 없음. 초기값 설정을 해주어야 함. 
		
		int ii = 8, ij = 0;
		System.out.println(ii + " " + ij);
		System.out.println("ii:" + ii + " " + Integer.toBinaryString(ii)); // Integer.toBinaryString()는 2진수로 나타내준 것
		
		ij = ii << 1; // 왼쪽(<-)으로 밀어버리기. >>(->)는 오른쪽으로 밀어버리기
		System.out.println("ij:" + ij + " " + Integer.toBinaryString(ij)); 
		
		ij = ii >> 2; // 왼쪽(<-)으로 밀어버리기. >>(->)는 오른쪽으로 밀어버리기
		System.out.println("ij:" + ij + " " + Integer.toBinaryString(ij)); 
		
		
		

	}

}
